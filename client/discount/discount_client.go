// Code generated by go-swagger; DO NOT EDIT.

package discount

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new discount API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for discount API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteDiscountsPositionGroupID(params *DeleteDiscountsPositionGroupIDParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteDiscountsPositionGroupIDNoContent, error)

	DeleteDiscountsPositionID(params *DeleteDiscountsPositionIDParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteDiscountsPositionIDNoContent, error)

	GetDiscountsPosition(params *GetDiscountsPositionParams, authInfo runtime.ClientAuthInfoWriter) (*GetDiscountsPositionOK, error)

	GetDiscountsPositionGroup(params *GetDiscountsPositionGroupParams, authInfo runtime.ClientAuthInfoWriter) (*GetDiscountsPositionGroupOK, error)

	GetDiscountsPositionGroupID(params *GetDiscountsPositionGroupIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetDiscountsPositionGroupIDOK, error)

	GetDiscountsPositionID(params *GetDiscountsPositionIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetDiscountsPositionIDOK, error)

	PostDiscountsPosition(params *PostDiscountsPositionParams, authInfo runtime.ClientAuthInfoWriter) (*PostDiscountsPositionCreated, error)

	PostDiscountsPositionGroup(params *PostDiscountsPositionGroupParams, authInfo runtime.ClientAuthInfoWriter) (*PostDiscountsPositionGroupCreated, error)

	PutDiscountsPositionGroupID(params *PutDiscountsPositionGroupIDParams, authInfo runtime.ClientAuthInfoWriter) (*PutDiscountsPositionGroupIDOK, error)

	PutDiscountsPositionID(params *PutDiscountsPositionIDParams, authInfo runtime.ClientAuthInfoWriter) (*PutDiscountsPositionIDOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteDiscountsPositionGroupID deletes the specified position group discount
*/
func (a *Client) DeleteDiscountsPositionGroupID(params *DeleteDiscountsPositionGroupIDParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteDiscountsPositionGroupIDNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteDiscountsPositionGroupIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteDiscountsPositionGroupID",
		Method:             "DELETE",
		PathPattern:        "/discounts/position-group/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteDiscountsPositionGroupIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteDiscountsPositionGroupIDNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteDiscountsPositionGroupID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteDiscountsPositionID deletes the specified position discount
*/
func (a *Client) DeleteDiscountsPositionID(params *DeleteDiscountsPositionIDParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteDiscountsPositionIDNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteDiscountsPositionIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteDiscountsPositionID",
		Method:             "DELETE",
		PathPattern:        "/discounts/position/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteDiscountsPositionIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteDiscountsPositionIDNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteDiscountsPositionID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetDiscountsPosition fetches list of position discounts
*/
func (a *Client) GetDiscountsPosition(params *GetDiscountsPositionParams, authInfo runtime.ClientAuthInfoWriter) (*GetDiscountsPositionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetDiscountsPositionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetDiscountsPosition",
		Method:             "GET",
		PathPattern:        "/discounts/position",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetDiscountsPositionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetDiscountsPositionOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetDiscountsPosition: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetDiscountsPositionGroup fetches list of position group discounts
*/
func (a *Client) GetDiscountsPositionGroup(params *GetDiscountsPositionGroupParams, authInfo runtime.ClientAuthInfoWriter) (*GetDiscountsPositionGroupOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetDiscountsPositionGroupParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetDiscountsPositionGroup",
		Method:             "GET",
		PathPattern:        "/discounts/position-group",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetDiscountsPositionGroupReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetDiscountsPositionGroupOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetDiscountsPositionGroup: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetDiscountsPositionGroupID fetches specified position group discount by id
*/
func (a *Client) GetDiscountsPositionGroupID(params *GetDiscountsPositionGroupIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetDiscountsPositionGroupIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetDiscountsPositionGroupIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetDiscountsPositionGroupID",
		Method:             "GET",
		PathPattern:        "/discounts/position-group/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetDiscountsPositionGroupIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetDiscountsPositionGroupIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetDiscountsPositionGroupID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetDiscountsPositionID fetches specified position discount by id
*/
func (a *Client) GetDiscountsPositionID(params *GetDiscountsPositionIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetDiscountsPositionIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetDiscountsPositionIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetDiscountsPositionID",
		Method:             "GET",
		PathPattern:        "/discounts/position/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetDiscountsPositionIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetDiscountsPositionIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetDiscountsPositionID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostDiscountsPosition creates a new position discount
*/
func (a *Client) PostDiscountsPosition(params *PostDiscountsPositionParams, authInfo runtime.ClientAuthInfoWriter) (*PostDiscountsPositionCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostDiscountsPositionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostDiscountsPosition",
		Method:             "POST",
		PathPattern:        "/discounts/position",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostDiscountsPositionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostDiscountsPositionCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostDiscountsPosition: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostDiscountsPositionGroup creates a new position group discount
*/
func (a *Client) PostDiscountsPositionGroup(params *PostDiscountsPositionGroupParams, authInfo runtime.ClientAuthInfoWriter) (*PostDiscountsPositionGroupCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostDiscountsPositionGroupParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostDiscountsPositionGroup",
		Method:             "POST",
		PathPattern:        "/discounts/position-group",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostDiscountsPositionGroupReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostDiscountsPositionGroupCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostDiscountsPositionGroup: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PutDiscountsPositionGroupID updates a position group discount
*/
func (a *Client) PutDiscountsPositionGroupID(params *PutDiscountsPositionGroupIDParams, authInfo runtime.ClientAuthInfoWriter) (*PutDiscountsPositionGroupIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPutDiscountsPositionGroupIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PutDiscountsPositionGroupID",
		Method:             "PUT",
		PathPattern:        "/discounts/position-group/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PutDiscountsPositionGroupIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PutDiscountsPositionGroupIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PutDiscountsPositionGroupID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PutDiscountsPositionID updates a position discount
*/
func (a *Client) PutDiscountsPositionID(params *PutDiscountsPositionIDParams, authInfo runtime.ClientAuthInfoWriter) (*PutDiscountsPositionIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPutDiscountsPositionIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PutDiscountsPositionID",
		Method:             "PUT",
		PathPattern:        "/discounts/position/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PutDiscountsPositionIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PutDiscountsPositionIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PutDiscountsPositionID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
