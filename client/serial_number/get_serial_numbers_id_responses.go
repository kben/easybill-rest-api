// Code generated by go-swagger; DO NOT EDIT.

package serial_number

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kben/easybill-rest-api/models"
)

// GetSerialNumbersIDReader is a Reader for the GetSerialNumbersID structure.
type GetSerialNumbersIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSerialNumbersIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSerialNumbersIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSerialNumbersIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetSerialNumbersIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSerialNumbersIDOK creates a GetSerialNumbersIDOK with default headers values
func NewGetSerialNumbersIDOK() *GetSerialNumbersIDOK {
	return &GetSerialNumbersIDOK{}
}

/*GetSerialNumbersIDOK handles this case with default header values.

Successful operation
*/
type GetSerialNumbersIDOK struct {
	Payload *models.SerialNumber
}

func (o *GetSerialNumbersIDOK) Error() string {
	return fmt.Sprintf("[GET /serial-numbers/{id}][%d] getSerialNumbersIdOK  %+v", 200, o.Payload)
}

func (o *GetSerialNumbersIDOK) GetPayload() *models.SerialNumber {
	return o.Payload
}

func (o *GetSerialNumbersIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SerialNumber)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSerialNumbersIDNotFound creates a GetSerialNumbersIDNotFound with default headers values
func NewGetSerialNumbersIDNotFound() *GetSerialNumbersIDNotFound {
	return &GetSerialNumbersIDNotFound{}
}

/*GetSerialNumbersIDNotFound handles this case with default header values.

Not found
*/
type GetSerialNumbersIDNotFound struct {
}

func (o *GetSerialNumbersIDNotFound) Error() string {
	return fmt.Sprintf("[GET /serial-numbers/{id}][%d] getSerialNumbersIdNotFound ", 404)
}

func (o *GetSerialNumbersIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSerialNumbersIDTooManyRequests creates a GetSerialNumbersIDTooManyRequests with default headers values
func NewGetSerialNumbersIDTooManyRequests() *GetSerialNumbersIDTooManyRequests {
	return &GetSerialNumbersIDTooManyRequests{}
}

/*GetSerialNumbersIDTooManyRequests handles this case with default header values.

Too Many Requests
*/
type GetSerialNumbersIDTooManyRequests struct {
}

func (o *GetSerialNumbersIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /serial-numbers/{id}][%d] getSerialNumbersIdTooManyRequests ", 429)
}

func (o *GetSerialNumbersIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
