// Code generated by go-swagger; DO NOT EDIT.

package logins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kben/easybill-rest-api/models"
)

// GetLoginsReader is a Reader for the GetLogins structure.
type GetLoginsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLoginsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLoginsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 429:
		result := NewGetLoginsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetLoginsOK creates a GetLoginsOK with default headers values
func NewGetLoginsOK() *GetLoginsOK {
	return &GetLoginsOK{}
}

/*GetLoginsOK handles this case with default header values.

Successful operation
*/
type GetLoginsOK struct {
	Payload *models.Logins
}

func (o *GetLoginsOK) Error() string {
	return fmt.Sprintf("[GET /logins][%d] getLoginsOK  %+v", 200, o.Payload)
}

func (o *GetLoginsOK) GetPayload() *models.Logins {
	return o.Payload
}

func (o *GetLoginsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Logins)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLoginsTooManyRequests creates a GetLoginsTooManyRequests with default headers values
func NewGetLoginsTooManyRequests() *GetLoginsTooManyRequests {
	return &GetLoginsTooManyRequests{}
}

/*GetLoginsTooManyRequests handles this case with default header values.

Too Many Requests
*/
type GetLoginsTooManyRequests struct {
}

func (o *GetLoginsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /logins][%d] getLoginsTooManyRequests ", 429)
}

func (o *GetLoginsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
