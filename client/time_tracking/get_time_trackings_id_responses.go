// Code generated by go-swagger; DO NOT EDIT.

package time_tracking

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kben/easybill-rest-api/models"
)

// GetTimeTrackingsIDReader is a Reader for the GetTimeTrackingsID structure.
type GetTimeTrackingsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTimeTrackingsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTimeTrackingsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetTimeTrackingsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetTimeTrackingsIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetTimeTrackingsIDOK creates a GetTimeTrackingsIDOK with default headers values
func NewGetTimeTrackingsIDOK() *GetTimeTrackingsIDOK {
	return &GetTimeTrackingsIDOK{}
}

/*GetTimeTrackingsIDOK handles this case with default header values.

Successful operation
*/
type GetTimeTrackingsIDOK struct {
	Payload *models.TimeTracking
}

func (o *GetTimeTrackingsIDOK) Error() string {
	return fmt.Sprintf("[GET /time-trackings/{id}][%d] getTimeTrackingsIdOK  %+v", 200, o.Payload)
}

func (o *GetTimeTrackingsIDOK) GetPayload() *models.TimeTracking {
	return o.Payload
}

func (o *GetTimeTrackingsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TimeTracking)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTimeTrackingsIDNotFound creates a GetTimeTrackingsIDNotFound with default headers values
func NewGetTimeTrackingsIDNotFound() *GetTimeTrackingsIDNotFound {
	return &GetTimeTrackingsIDNotFound{}
}

/*GetTimeTrackingsIDNotFound handles this case with default header values.

Not found
*/
type GetTimeTrackingsIDNotFound struct {
}

func (o *GetTimeTrackingsIDNotFound) Error() string {
	return fmt.Sprintf("[GET /time-trackings/{id}][%d] getTimeTrackingsIdNotFound ", 404)
}

func (o *GetTimeTrackingsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTimeTrackingsIDTooManyRequests creates a GetTimeTrackingsIDTooManyRequests with default headers values
func NewGetTimeTrackingsIDTooManyRequests() *GetTimeTrackingsIDTooManyRequests {
	return &GetTimeTrackingsIDTooManyRequests{}
}

/*GetTimeTrackingsIDTooManyRequests handles this case with default header values.

Too Many Requests
*/
type GetTimeTrackingsIDTooManyRequests struct {
}

func (o *GetTimeTrackingsIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /time-trackings/{id}][%d] getTimeTrackingsIdTooManyRequests ", 429)
}

func (o *GetTimeTrackingsIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
