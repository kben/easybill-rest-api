// Code generated by go-swagger; DO NOT EDIT.

package sepa_payment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kben/easybill-rest-api/models"
)

// GetSepaPaymentsIDReader is a Reader for the GetSepaPaymentsID structure.
type GetSepaPaymentsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSepaPaymentsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSepaPaymentsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSepaPaymentsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetSepaPaymentsIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSepaPaymentsIDOK creates a GetSepaPaymentsIDOK with default headers values
func NewGetSepaPaymentsIDOK() *GetSepaPaymentsIDOK {
	return &GetSepaPaymentsIDOK{}
}

/*GetSepaPaymentsIDOK handles this case with default header values.

Successful operation
*/
type GetSepaPaymentsIDOK struct {
	Payload *models.SEPAPayment
}

func (o *GetSepaPaymentsIDOK) Error() string {
	return fmt.Sprintf("[GET /sepa-payments/{id}][%d] getSepaPaymentsIdOK  %+v", 200, o.Payload)
}

func (o *GetSepaPaymentsIDOK) GetPayload() *models.SEPAPayment {
	return o.Payload
}

func (o *GetSepaPaymentsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SEPAPayment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSepaPaymentsIDNotFound creates a GetSepaPaymentsIDNotFound with default headers values
func NewGetSepaPaymentsIDNotFound() *GetSepaPaymentsIDNotFound {
	return &GetSepaPaymentsIDNotFound{}
}

/*GetSepaPaymentsIDNotFound handles this case with default header values.

Not found
*/
type GetSepaPaymentsIDNotFound struct {
}

func (o *GetSepaPaymentsIDNotFound) Error() string {
	return fmt.Sprintf("[GET /sepa-payments/{id}][%d] getSepaPaymentsIdNotFound ", 404)
}

func (o *GetSepaPaymentsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSepaPaymentsIDTooManyRequests creates a GetSepaPaymentsIDTooManyRequests with default headers values
func NewGetSepaPaymentsIDTooManyRequests() *GetSepaPaymentsIDTooManyRequests {
	return &GetSepaPaymentsIDTooManyRequests{}
}

/*GetSepaPaymentsIDTooManyRequests handles this case with default header values.

Too Many Requests
*/
type GetSepaPaymentsIDTooManyRequests struct {
}

func (o *GetSepaPaymentsIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /sepa-payments/{id}][%d] getSepaPaymentsIdTooManyRequests ", 429)
}

func (o *GetSepaPaymentsIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
