// Code generated by go-swagger; DO NOT EDIT.

package sepa_payment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kben/easybill-rest-api/models"
)

// GetSepaPaymentsReader is a Reader for the GetSepaPayments structure.
type GetSepaPaymentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSepaPaymentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSepaPaymentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 429:
		result := NewGetSepaPaymentsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSepaPaymentsOK creates a GetSepaPaymentsOK with default headers values
func NewGetSepaPaymentsOK() *GetSepaPaymentsOK {
	return &GetSepaPaymentsOK{}
}

/*GetSepaPaymentsOK handles this case with default header values.

Successful operation
*/
type GetSepaPaymentsOK struct {
	Payload *models.SEPAPayments
}

func (o *GetSepaPaymentsOK) Error() string {
	return fmt.Sprintf("[GET /sepa-payments][%d] getSepaPaymentsOK  %+v", 200, o.Payload)
}

func (o *GetSepaPaymentsOK) GetPayload() *models.SEPAPayments {
	return o.Payload
}

func (o *GetSepaPaymentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SEPAPayments)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSepaPaymentsTooManyRequests creates a GetSepaPaymentsTooManyRequests with default headers values
func NewGetSepaPaymentsTooManyRequests() *GetSepaPaymentsTooManyRequests {
	return &GetSepaPaymentsTooManyRequests{}
}

/*GetSepaPaymentsTooManyRequests handles this case with default header values.

Too Many Requests
*/
type GetSepaPaymentsTooManyRequests struct {
}

func (o *GetSepaPaymentsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /sepa-payments][%d] getSepaPaymentsTooManyRequests ", 429)
}

func (o *GetSepaPaymentsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
