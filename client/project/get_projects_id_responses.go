// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kben/easybill-rest-api/models"
)

// GetProjectsIDReader is a Reader for the GetProjectsID structure.
type GetProjectsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProjectsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetProjectsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetProjectsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetProjectsIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetProjectsIDOK creates a GetProjectsIDOK with default headers values
func NewGetProjectsIDOK() *GetProjectsIDOK {
	return &GetProjectsIDOK{}
}

/*GetProjectsIDOK handles this case with default header values.

Successful operation
*/
type GetProjectsIDOK struct {
	Payload *models.Project
}

func (o *GetProjectsIDOK) Error() string {
	return fmt.Sprintf("[GET /projects/{id}][%d] getProjectsIdOK  %+v", 200, o.Payload)
}

func (o *GetProjectsIDOK) GetPayload() *models.Project {
	return o.Payload
}

func (o *GetProjectsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Project)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjectsIDNotFound creates a GetProjectsIDNotFound with default headers values
func NewGetProjectsIDNotFound() *GetProjectsIDNotFound {
	return &GetProjectsIDNotFound{}
}

/*GetProjectsIDNotFound handles this case with default header values.

Not found
*/
type GetProjectsIDNotFound struct {
}

func (o *GetProjectsIDNotFound) Error() string {
	return fmt.Sprintf("[GET /projects/{id}][%d] getProjectsIdNotFound ", 404)
}

func (o *GetProjectsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProjectsIDTooManyRequests creates a GetProjectsIDTooManyRequests with default headers values
func NewGetProjectsIDTooManyRequests() *GetProjectsIDTooManyRequests {
	return &GetProjectsIDTooManyRequests{}
}

/*GetProjectsIDTooManyRequests handles this case with default header values.

Too Many Requests
*/
type GetProjectsIDTooManyRequests struct {
}

func (o *GetProjectsIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /projects/{id}][%d] getProjectsIdTooManyRequests ", 429)
}

func (o *GetProjectsIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
