// Code generated by go-swagger; DO NOT EDIT.

package document

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kben/easybill-rest-api/models"
)

// PostDocumentsIDCancelReader is a Reader for the PostDocumentsIDCancel structure.
type PostDocumentsIDCancelReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDocumentsIDCancelReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostDocumentsIDCancelOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewPostDocumentsIDCancelNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostDocumentsIDCancelTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostDocumentsIDCancelOK creates a PostDocumentsIDCancelOK with default headers values
func NewPostDocumentsIDCancelOK() *PostDocumentsIDCancelOK {
	return &PostDocumentsIDCancelOK{}
}

/*PostDocumentsIDCancelOK handles this case with default header values.

Successful operation
*/
type PostDocumentsIDCancelOK struct {
	Payload *models.Document
}

func (o *PostDocumentsIDCancelOK) Error() string {
	return fmt.Sprintf("[POST /documents/{id}/cancel][%d] postDocumentsIdCancelOK  %+v", 200, o.Payload)
}

func (o *PostDocumentsIDCancelOK) GetPayload() *models.Document {
	return o.Payload
}

func (o *PostDocumentsIDCancelOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Document)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDocumentsIDCancelNotFound creates a PostDocumentsIDCancelNotFound with default headers values
func NewPostDocumentsIDCancelNotFound() *PostDocumentsIDCancelNotFound {
	return &PostDocumentsIDCancelNotFound{}
}

/*PostDocumentsIDCancelNotFound handles this case with default header values.

Not found
*/
type PostDocumentsIDCancelNotFound struct {
}

func (o *PostDocumentsIDCancelNotFound) Error() string {
	return fmt.Sprintf("[POST /documents/{id}/cancel][%d] postDocumentsIdCancelNotFound ", 404)
}

func (o *PostDocumentsIDCancelNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDocumentsIDCancelTooManyRequests creates a PostDocumentsIDCancelTooManyRequests with default headers values
func NewPostDocumentsIDCancelTooManyRequests() *PostDocumentsIDCancelTooManyRequests {
	return &PostDocumentsIDCancelTooManyRequests{}
}

/*PostDocumentsIDCancelTooManyRequests handles this case with default header values.

Too Many Requests
*/
type PostDocumentsIDCancelTooManyRequests struct {
}

func (o *PostDocumentsIDCancelTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /documents/{id}/cancel][%d] postDocumentsIdCancelTooManyRequests ", 429)
}

func (o *PostDocumentsIDCancelTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
