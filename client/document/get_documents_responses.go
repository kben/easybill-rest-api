// Code generated by go-swagger; DO NOT EDIT.

package document

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kben/easybill-rest-api/models"
)

// GetDocumentsReader is a Reader for the GetDocuments structure.
type GetDocumentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDocumentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDocumentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 429:
		result := NewGetDocumentsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDocumentsOK creates a GetDocumentsOK with default headers values
func NewGetDocumentsOK() *GetDocumentsOK {
	return &GetDocumentsOK{}
}

/*GetDocumentsOK handles this case with default header values.

Successful operation
*/
type GetDocumentsOK struct {
	Payload *models.Documents
}

func (o *GetDocumentsOK) Error() string {
	return fmt.Sprintf("[GET /documents][%d] getDocumentsOK  %+v", 200, o.Payload)
}

func (o *GetDocumentsOK) GetPayload() *models.Documents {
	return o.Payload
}

func (o *GetDocumentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Documents)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDocumentsTooManyRequests creates a GetDocumentsTooManyRequests with default headers values
func NewGetDocumentsTooManyRequests() *GetDocumentsTooManyRequests {
	return &GetDocumentsTooManyRequests{}
}

/*GetDocumentsTooManyRequests handles this case with default header values.

Too Many Requests
*/
type GetDocumentsTooManyRequests struct {
}

func (o *GetDocumentsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /documents][%d] getDocumentsTooManyRequests ", 429)
}

func (o *GetDocumentsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
