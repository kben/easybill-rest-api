// Code generated by go-swagger; DO NOT EDIT.

package document

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetDocumentsIDPdfReader is a Reader for the GetDocumentsIDPdf structure.
type GetDocumentsIDPdfReader struct {
	formats strfmt.Registry
	writer  io.Writer
}

// ReadResponse reads a server response into the received o.
func (o *GetDocumentsIDPdfReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDocumentsIDPdfOK(o.writer)
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetDocumentsIDPdfNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetDocumentsIDPdfTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDocumentsIDPdfOK creates a GetDocumentsIDPdfOK with default headers values
func NewGetDocumentsIDPdfOK(writer io.Writer) *GetDocumentsIDPdfOK {
	return &GetDocumentsIDPdfOK{
		Payload: writer,
	}
}

/*GetDocumentsIDPdfOK handles this case with default header values.

Successful operation
*/
type GetDocumentsIDPdfOK struct {
	Payload io.Writer
}

func (o *GetDocumentsIDPdfOK) Error() string {
	return fmt.Sprintf("[GET /documents/{id}/pdf][%d] getDocumentsIdPdfOK  %+v", 200, o.Payload)
}

func (o *GetDocumentsIDPdfOK) GetPayload() io.Writer {
	return o.Payload
}

func (o *GetDocumentsIDPdfOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDocumentsIDPdfNotFound creates a GetDocumentsIDPdfNotFound with default headers values
func NewGetDocumentsIDPdfNotFound() *GetDocumentsIDPdfNotFound {
	return &GetDocumentsIDPdfNotFound{}
}

/*GetDocumentsIDPdfNotFound handles this case with default header values.

Not found
*/
type GetDocumentsIDPdfNotFound struct {
}

func (o *GetDocumentsIDPdfNotFound) Error() string {
	return fmt.Sprintf("[GET /documents/{id}/pdf][%d] getDocumentsIdPdfNotFound ", 404)
}

func (o *GetDocumentsIDPdfNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDocumentsIDPdfTooManyRequests creates a GetDocumentsIDPdfTooManyRequests with default headers values
func NewGetDocumentsIDPdfTooManyRequests() *GetDocumentsIDPdfTooManyRequests {
	return &GetDocumentsIDPdfTooManyRequests{}
}

/*GetDocumentsIDPdfTooManyRequests handles this case with default header values.

Too Many Requests
*/
type GetDocumentsIDPdfTooManyRequests struct {
}

func (o *GetDocumentsIDPdfTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /documents/{id}/pdf][%d] getDocumentsIdPdfTooManyRequests ", 429)
}

func (o *GetDocumentsIDPdfTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
