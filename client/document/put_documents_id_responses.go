// Code generated by go-swagger; DO NOT EDIT.

package document

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kben/easybill-rest-api/models"
)

// PutDocumentsIDReader is a Reader for the PutDocumentsID structure.
type PutDocumentsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutDocumentsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutDocumentsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutDocumentsIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutDocumentsIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutDocumentsIDOK creates a PutDocumentsIDOK with default headers values
func NewPutDocumentsIDOK() *PutDocumentsIDOK {
	return &PutDocumentsIDOK{}
}

/*PutDocumentsIDOK handles this case with default header values.

Successful operation
*/
type PutDocumentsIDOK struct {
	Payload *models.Document
}

func (o *PutDocumentsIDOK) Error() string {
	return fmt.Sprintf("[PUT /documents/{id}][%d] putDocumentsIdOK  %+v", 200, o.Payload)
}

func (o *PutDocumentsIDOK) GetPayload() *models.Document {
	return o.Payload
}

func (o *PutDocumentsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Document)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDocumentsIDBadRequest creates a PutDocumentsIDBadRequest with default headers values
func NewPutDocumentsIDBadRequest() *PutDocumentsIDBadRequest {
	return &PutDocumentsIDBadRequest{}
}

/*PutDocumentsIDBadRequest handles this case with default header values.

Invalid Document
*/
type PutDocumentsIDBadRequest struct {
}

func (o *PutDocumentsIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /documents/{id}][%d] putDocumentsIdBadRequest ", 400)
}

func (o *PutDocumentsIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutDocumentsIDTooManyRequests creates a PutDocumentsIDTooManyRequests with default headers values
func NewPutDocumentsIDTooManyRequests() *PutDocumentsIDTooManyRequests {
	return &PutDocumentsIDTooManyRequests{}
}

/*PutDocumentsIDTooManyRequests handles this case with default header values.

Too Many Requests
*/
type PutDocumentsIDTooManyRequests struct {
}

func (o *PutDocumentsIDTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /documents/{id}][%d] putDocumentsIdTooManyRequests ", 429)
}

func (o *PutDocumentsIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
