// Code generated by go-swagger; DO NOT EDIT.

package task

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kben/easybill-rest-api/models"
)

// PostTasksReader is a Reader for the PostTasks structure.
type PostTasksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostTasksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostTasksCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 429:
		result := NewPostTasksTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostTasksCreated creates a PostTasksCreated with default headers values
func NewPostTasksCreated() *PostTasksCreated {
	return &PostTasksCreated{}
}

/*PostTasksCreated handles this case with default header values.

Successful operation
*/
type PostTasksCreated struct {
	Payload *models.Task
}

func (o *PostTasksCreated) Error() string {
	return fmt.Sprintf("[POST /tasks][%d] postTasksCreated  %+v", 201, o.Payload)
}

func (o *PostTasksCreated) GetPayload() *models.Task {
	return o.Payload
}

func (o *PostTasksCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTasksTooManyRequests creates a PostTasksTooManyRequests with default headers values
func NewPostTasksTooManyRequests() *PostTasksTooManyRequests {
	return &PostTasksTooManyRequests{}
}

/*PostTasksTooManyRequests handles this case with default header values.

Too Many Requests
*/
type PostTasksTooManyRequests struct {
}

func (o *PostTasksTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /tasks][%d] postTasksTooManyRequests ", 429)
}

func (o *PostTasksTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
