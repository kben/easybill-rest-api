// Code generated by go-swagger; DO NOT EDIT.

package position

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kben/easybill-rest-api/models"
)

// PutPositionsIDReader is a Reader for the PutPositionsID structure.
type PutPositionsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutPositionsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutPositionsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutPositionsIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPutPositionsIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutPositionsIDOK creates a PutPositionsIDOK with default headers values
func NewPutPositionsIDOK() *PutPositionsIDOK {
	return &PutPositionsIDOK{}
}

/*PutPositionsIDOK handles this case with default header values.

Successful operation
*/
type PutPositionsIDOK struct {
	Payload *models.Position
}

func (o *PutPositionsIDOK) Error() string {
	return fmt.Sprintf("[PUT /positions/{id}][%d] putPositionsIdOK  %+v", 200, o.Payload)
}

func (o *PutPositionsIDOK) GetPayload() *models.Position {
	return o.Payload
}

func (o *PutPositionsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Position)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutPositionsIDBadRequest creates a PutPositionsIDBadRequest with default headers values
func NewPutPositionsIDBadRequest() *PutPositionsIDBadRequest {
	return &PutPositionsIDBadRequest{}
}

/*PutPositionsIDBadRequest handles this case with default header values.

Invalid position
*/
type PutPositionsIDBadRequest struct {
}

func (o *PutPositionsIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /positions/{id}][%d] putPositionsIdBadRequest ", 400)
}

func (o *PutPositionsIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutPositionsIDTooManyRequests creates a PutPositionsIDTooManyRequests with default headers values
func NewPutPositionsIDTooManyRequests() *PutPositionsIDTooManyRequests {
	return &PutPositionsIDTooManyRequests{}
}

/*PutPositionsIDTooManyRequests handles this case with default header values.

Too Many Requests
*/
type PutPositionsIDTooManyRequests struct {
}

func (o *PutPositionsIDTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /positions/{id}][%d] putPositionsIdTooManyRequests ", 429)
}

func (o *PutPositionsIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
