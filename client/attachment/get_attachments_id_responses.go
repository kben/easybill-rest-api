// Code generated by go-swagger; DO NOT EDIT.

package attachment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kben/easybill-rest-api/models"
)

// GetAttachmentsIDReader is a Reader for the GetAttachmentsID structure.
type GetAttachmentsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAttachmentsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAttachmentsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetAttachmentsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetAttachmentsIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAttachmentsIDOK creates a GetAttachmentsIDOK with default headers values
func NewGetAttachmentsIDOK() *GetAttachmentsIDOK {
	return &GetAttachmentsIDOK{}
}

/*GetAttachmentsIDOK handles this case with default header values.

Successful operation
*/
type GetAttachmentsIDOK struct {
	Payload *models.Attachment
}

func (o *GetAttachmentsIDOK) Error() string {
	return fmt.Sprintf("[GET /attachments/{id}][%d] getAttachmentsIdOK  %+v", 200, o.Payload)
}

func (o *GetAttachmentsIDOK) GetPayload() *models.Attachment {
	return o.Payload
}

func (o *GetAttachmentsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Attachment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAttachmentsIDNotFound creates a GetAttachmentsIDNotFound with default headers values
func NewGetAttachmentsIDNotFound() *GetAttachmentsIDNotFound {
	return &GetAttachmentsIDNotFound{}
}

/*GetAttachmentsIDNotFound handles this case with default header values.

Not found
*/
type GetAttachmentsIDNotFound struct {
}

func (o *GetAttachmentsIDNotFound) Error() string {
	return fmt.Sprintf("[GET /attachments/{id}][%d] getAttachmentsIdNotFound ", 404)
}

func (o *GetAttachmentsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAttachmentsIDTooManyRequests creates a GetAttachmentsIDTooManyRequests with default headers values
func NewGetAttachmentsIDTooManyRequests() *GetAttachmentsIDTooManyRequests {
	return &GetAttachmentsIDTooManyRequests{}
}

/*GetAttachmentsIDTooManyRequests handles this case with default header values.

Too Many Requests
*/
type GetAttachmentsIDTooManyRequests struct {
}

func (o *GetAttachmentsIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /attachments/{id}][%d] getAttachmentsIdTooManyRequests ", 429)
}

func (o *GetAttachmentsIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
