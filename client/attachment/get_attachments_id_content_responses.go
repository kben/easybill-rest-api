// Code generated by go-swagger; DO NOT EDIT.

package attachment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetAttachmentsIDContentReader is a Reader for the GetAttachmentsIDContent structure.
type GetAttachmentsIDContentReader struct {
	formats strfmt.Registry
	writer  io.Writer
}

// ReadResponse reads a server response into the received o.
func (o *GetAttachmentsIDContentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAttachmentsIDContentOK(o.writer)
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetAttachmentsIDContentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetAttachmentsIDContentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAttachmentsIDContentOK creates a GetAttachmentsIDContentOK with default headers values
func NewGetAttachmentsIDContentOK(writer io.Writer) *GetAttachmentsIDContentOK {
	return &GetAttachmentsIDContentOK{
		Payload: writer,
	}
}

/*GetAttachmentsIDContentOK handles this case with default header values.

Successful operation
*/
type GetAttachmentsIDContentOK struct {
	Payload io.Writer
}

func (o *GetAttachmentsIDContentOK) Error() string {
	return fmt.Sprintf("[GET /attachments/{id}/content][%d] getAttachmentsIdContentOK  %+v", 200, o.Payload)
}

func (o *GetAttachmentsIDContentOK) GetPayload() io.Writer {
	return o.Payload
}

func (o *GetAttachmentsIDContentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAttachmentsIDContentNotFound creates a GetAttachmentsIDContentNotFound with default headers values
func NewGetAttachmentsIDContentNotFound() *GetAttachmentsIDContentNotFound {
	return &GetAttachmentsIDContentNotFound{}
}

/*GetAttachmentsIDContentNotFound handles this case with default header values.

Not found
*/
type GetAttachmentsIDContentNotFound struct {
}

func (o *GetAttachmentsIDContentNotFound) Error() string {
	return fmt.Sprintf("[GET /attachments/{id}/content][%d] getAttachmentsIdContentNotFound ", 404)
}

func (o *GetAttachmentsIDContentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAttachmentsIDContentTooManyRequests creates a GetAttachmentsIDContentTooManyRequests with default headers values
func NewGetAttachmentsIDContentTooManyRequests() *GetAttachmentsIDContentTooManyRequests {
	return &GetAttachmentsIDContentTooManyRequests{}
}

/*GetAttachmentsIDContentTooManyRequests handles this case with default header values.

Too Many Requests
*/
type GetAttachmentsIDContentTooManyRequests struct {
}

func (o *GetAttachmentsIDContentTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /attachments/{id}/content][%d] getAttachmentsIdContentTooManyRequests ", 429)
}

func (o *GetAttachmentsIDContentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
