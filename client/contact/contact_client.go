// Code generated by go-swagger; DO NOT EDIT.

package contact

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new contact API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for contact API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteCustomersCustomerIDContactsID(params *DeleteCustomersCustomerIDContactsIDParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteCustomersCustomerIDContactsIDNoContent, error)

	GetCustomersCustomerIDContacts(params *GetCustomersCustomerIDContactsParams, authInfo runtime.ClientAuthInfoWriter) (*GetCustomersCustomerIDContactsOK, error)

	GetCustomersCustomerIDContactsID(params *GetCustomersCustomerIDContactsIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetCustomersCustomerIDContactsIDOK, error)

	PostCustomersCustomerIDContacts(params *PostCustomersCustomerIDContactsParams, authInfo runtime.ClientAuthInfoWriter) (*PostCustomersCustomerIDContactsOK, error)

	PutCustomersCustomerIDContactsID(params *PutCustomersCustomerIDContactsIDParams, authInfo runtime.ClientAuthInfoWriter) (*PutCustomersCustomerIDContactsIDOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteCustomersCustomerIDContactsID deletes contact
*/
func (a *Client) DeleteCustomersCustomerIDContactsID(params *DeleteCustomersCustomerIDContactsIDParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteCustomersCustomerIDContactsIDNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteCustomersCustomerIDContactsIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteCustomersCustomerIDContactsID",
		Method:             "DELETE",
		PathPattern:        "/customers/{customerId}/contacts/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteCustomersCustomerIDContactsIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteCustomersCustomerIDContactsIDNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteCustomersCustomerIDContactsID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetCustomersCustomerIDContacts fetches customer contact list
*/
func (a *Client) GetCustomersCustomerIDContacts(params *GetCustomersCustomerIDContactsParams, authInfo runtime.ClientAuthInfoWriter) (*GetCustomersCustomerIDContactsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetCustomersCustomerIDContactsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetCustomersCustomerIDContacts",
		Method:             "GET",
		PathPattern:        "/customers/{customerId}/contacts",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetCustomersCustomerIDContactsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetCustomersCustomerIDContactsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetCustomersCustomerIDContacts: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetCustomersCustomerIDContactsID fetches contact
*/
func (a *Client) GetCustomersCustomerIDContactsID(params *GetCustomersCustomerIDContactsIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetCustomersCustomerIDContactsIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetCustomersCustomerIDContactsIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetCustomersCustomerIDContactsID",
		Method:             "GET",
		PathPattern:        "/customers/{customerId}/contacts/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetCustomersCustomerIDContactsIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetCustomersCustomerIDContactsIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetCustomersCustomerIDContactsID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostCustomersCustomerIDContacts creates new contact
*/
func (a *Client) PostCustomersCustomerIDContacts(params *PostCustomersCustomerIDContactsParams, authInfo runtime.ClientAuthInfoWriter) (*PostCustomersCustomerIDContactsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostCustomersCustomerIDContactsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostCustomersCustomerIDContacts",
		Method:             "POST",
		PathPattern:        "/customers/{customerId}/contacts",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostCustomersCustomerIDContactsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostCustomersCustomerIDContactsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostCustomersCustomerIDContacts: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PutCustomersCustomerIDContactsID updates contact
*/
func (a *Client) PutCustomersCustomerIDContactsID(params *PutCustomersCustomerIDContactsIDParams, authInfo runtime.ClientAuthInfoWriter) (*PutCustomersCustomerIDContactsIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPutCustomersCustomerIDContactsIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PutCustomersCustomerIDContactsID",
		Method:             "PUT",
		PathPattern:        "/customers/{customerId}/contacts/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PutCustomersCustomerIDContactsIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PutCustomersCustomerIDContactsIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PutCustomersCustomerIDContactsID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
