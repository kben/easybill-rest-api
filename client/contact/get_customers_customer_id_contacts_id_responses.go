// Code generated by go-swagger; DO NOT EDIT.

package contact

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kben/easybill-rest-api/models"
)

// GetCustomersCustomerIDContactsIDReader is a Reader for the GetCustomersCustomerIDContactsID structure.
type GetCustomersCustomerIDContactsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCustomersCustomerIDContactsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCustomersCustomerIDContactsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetCustomersCustomerIDContactsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetCustomersCustomerIDContactsIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCustomersCustomerIDContactsIDOK creates a GetCustomersCustomerIDContactsIDOK with default headers values
func NewGetCustomersCustomerIDContactsIDOK() *GetCustomersCustomerIDContactsIDOK {
	return &GetCustomersCustomerIDContactsIDOK{}
}

/*GetCustomersCustomerIDContactsIDOK handles this case with default header values.

Successful operation
*/
type GetCustomersCustomerIDContactsIDOK struct {
	Payload *models.Contact
}

func (o *GetCustomersCustomerIDContactsIDOK) Error() string {
	return fmt.Sprintf("[GET /customers/{customerId}/contacts/{id}][%d] getCustomersCustomerIdContactsIdOK  %+v", 200, o.Payload)
}

func (o *GetCustomersCustomerIDContactsIDOK) GetPayload() *models.Contact {
	return o.Payload
}

func (o *GetCustomersCustomerIDContactsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Contact)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomersCustomerIDContactsIDNotFound creates a GetCustomersCustomerIDContactsIDNotFound with default headers values
func NewGetCustomersCustomerIDContactsIDNotFound() *GetCustomersCustomerIDContactsIDNotFound {
	return &GetCustomersCustomerIDContactsIDNotFound{}
}

/*GetCustomersCustomerIDContactsIDNotFound handles this case with default header values.

Not found
*/
type GetCustomersCustomerIDContactsIDNotFound struct {
}

func (o *GetCustomersCustomerIDContactsIDNotFound) Error() string {
	return fmt.Sprintf("[GET /customers/{customerId}/contacts/{id}][%d] getCustomersCustomerIdContactsIdNotFound ", 404)
}

func (o *GetCustomersCustomerIDContactsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCustomersCustomerIDContactsIDTooManyRequests creates a GetCustomersCustomerIDContactsIDTooManyRequests with default headers values
func NewGetCustomersCustomerIDContactsIDTooManyRequests() *GetCustomersCustomerIDContactsIDTooManyRequests {
	return &GetCustomersCustomerIDContactsIDTooManyRequests{}
}

/*GetCustomersCustomerIDContactsIDTooManyRequests handles this case with default header values.

Too Many Requests
*/
type GetCustomersCustomerIDContactsIDTooManyRequests struct {
}

func (o *GetCustomersCustomerIDContactsIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /customers/{customerId}/contacts/{id}][%d] getCustomersCustomerIdContactsIdTooManyRequests ", 429)
}

func (o *GetCustomersCustomerIDContactsIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
