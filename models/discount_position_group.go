// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DiscountPositionGroup discount position group
//
// swagger:model DiscountPositionGroup
type DiscountPositionGroup struct {
	Discount

	// position group id
	// Required: true
	PositionGroupID *int64 `json:"position_group_id"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *DiscountPositionGroup) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 Discount
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.Discount = aO0

	// now for regular properties
	var propsDiscountPositionGroup struct {
		PositionGroupID *int64 `json:"position_group_id"`
	}
	if err := swag.ReadJSON(raw, &propsDiscountPositionGroup); err != nil {
		return err
	}
	m.PositionGroupID = propsDiscountPositionGroup.PositionGroupID

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m DiscountPositionGroup) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	aO0, err := swag.WriteJSON(m.Discount)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	// now for regular properties
	var propsDiscountPositionGroup struct {
		PositionGroupID *int64 `json:"position_group_id"`
	}
	propsDiscountPositionGroup.PositionGroupID = m.PositionGroupID

	jsonDataPropsDiscountPositionGroup, errDiscountPositionGroup := swag.WriteJSON(propsDiscountPositionGroup)
	if errDiscountPositionGroup != nil {
		return nil, errDiscountPositionGroup
	}
	_parts = append(_parts, jsonDataPropsDiscountPositionGroup)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this discount position group
func (m *DiscountPositionGroup) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with Discount
	if err := m.Discount.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePositionGroupID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DiscountPositionGroup) validatePositionGroupID(formats strfmt.Registry) error {

	if err := validate.Required("position_group_id", "body", m.PositionGroupID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DiscountPositionGroup) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DiscountPositionGroup) UnmarshalBinary(b []byte) error {
	var res DiscountPositionGroup
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
